<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="
		http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
                http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
                http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">

    <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:jdbc.properties</value>
                <value>classpath:hibernate.properties</value>                
            </list>
        </property>
    </bean>  
    
    <bean id="txManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
        <property name="sessionFactory" ref="mySessionFactory"/>
    </bean>                 
    
    <bean id="mySessionFactory" class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
        <property name="dataSource" ref="myDataSource"/>
        <property name="mappingDirectoryLocations" value="classpath:/com/dorado/spring3/rest/bean"/> 
        <property name="hibernateProperties">
            <props>  
                <prop key="hibernate.dialect">${hibernate.dialect}</prop>
                <prop key="hibernate.jdbc.batch_size">${hibernate.jdbc.batch_size}</prop>
                <prop key="hibernate.default_batch_fetch_size">${hibernate.default_batch_fetch_size}</prop>
                <prop key="org.hibernate.SQL">${org.hibernate.SQL}</prop>
                <prop key="org.hibernate.type">${org.hibernate.type}</prop>
                <prop key="org.hibernate.tool.hbm2ddl">${org.hibernate.tool.hbm2ddl}</prop>
                <prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
                <!-- 
                <prop key="hibernate.current_session_context_class">${hibernate.current_session_context_class}</prop>
                -->
            </props>
        </property>  
    </bean>    
    
    <bean id="myDataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="${jdbc.driver}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
    </bean>  

    <bean id="loanDAO" class="com.mycompany.spring3.rest.ds.LoanApplicationServiceImpl">
        <property name="sessionFactory" ref="mySessionFactory"/>
    </bean>    
    <!--
    <bean id="transactionTemplate" class="org.springframework.transaction.support.TransactionTemplate">     
        <property name="transactionManager" ref="txManager"/> 
    </bean>
    -->
    <!--
    <bean id="logAspect" class="com.dorado.interceptor.LoggingAspect"/> 
    -->
     
    <!-- the transactional advice (what 'happens'; see the <aop:advisor/> bean below) -->
    <tx:advice id="txRequired" transaction-manager="txManager">
        <!-- the transactional semantics... -->
        <tx:attributes>
            <tx:method name="*" propagation="REQUIRED"/>
        </tx:attributes>
    </tx:advice>                 

    <tx:advice id="txSupports" transaction-manager="txManager">
        <!-- the transactional semantics... -->
        <tx:attributes>
            <tx:method name="*" propagation="SUPPORTS"/>
        </tx:attributes>
    </tx:advice> 
                              
    <aop:config>
        <aop:pointcut id="txPointCutsRequired" expression="execution(* com.mycompany.spring3.rest.controller.*.*(..))"/>
        <aop:advisor advice-ref="txRequired" pointcut-ref="txPointCutsRequired"/>
        <!--
        <aop:aspect ref="logAspect">
            <aop:pointcut id="businessService" 
                          expression="execution(* com.dorado.rest.client.*.*(..)) 
          or execution(* com.dorado.rest.controller.*.*(..)) or 
          execution(* com.dorado.rest.ds.*.*(..))"/>
            <aop:around pointcut-ref="businessService" method="log"/>
            <aop:after-throwing pointcut-ref="businessService" method="logError" throwing="error"/>
        </aop:aspect>          
        -->
    </aop:config>    
    
    <bean id="messageSource"
         class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
        <property name="basename" value="classpath:messages"/>
        <property name="defaultEncoding" value="UTF-8"/>
    </bean>    
</beans>